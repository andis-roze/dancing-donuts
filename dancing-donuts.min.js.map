{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/shaders/basic/FragmentShader.glsl","webpack:///./src/shaders/basic/VertexShader.glsl","webpack:///./src/DonutContainer2D.ts","webpack:///./src/DonutContainer3D.ts","webpack:///./src/common/AbstractDonutContainer.ts","webpack:///./src/common/Donut.ts","webpack:///./src/index.ts","webpack:///./src/shaders/AbstractShader.ts","webpack:///./src/shaders/basic/BasicShader.ts","webpack:///./src/utils.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAe,iGAAkC,qCAAqC,4BAA4B,qBAAqB,iEAAiE,GAAG,G;;;;;;;;;;;;ACA3M;AAAe,+FAAgC,qCAAqC,mCAAmC,+BAA+B,qCAAqC,iBAAiB,kFAAkF,oCAAoC,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvO;AACxD;AAGtC;IAAsC,oCAAsB;IAGxD,0BAAmB,KAA0B;QAA7C,YACI,kBAAM,KAAK,CAAC,SAWf;QA+BO,cAAQ,GAAG,UAAC,CAAsB;YAChC,iBAAmB,EAAjB,QAAC,EAAE,QAAc,CAAC;YACpB,2BAAoC,EAAlC,gBAAK,EAAE,gBAA2B,CAAC;YAC3C,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACtB,KAAI,CAAC,UAAU,CAAC,SAAS,CACrB,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EAC3C,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EAC3C,KAAI,CAAC,UAAU,EACf,KAAI,CAAC,UAAU,CAClB,CAAC;YACF,KAAI,CAAC,UAAU,CAAC,SAAS,CACrB,KAAK,CAAC,SAAS,EAAE,EACjB,CAAC,EACD,CAAC,EACD,KAAI,CAAC,UAAU,EACf,KAAI,CAAC,UAAU,EACf,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EAC3C,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EAC3C,KAAI,CAAC,UAAU,EACf,KAAI,CAAC,UAAU,CAClB,CAAC;QACN,CAAC;QA9DG,IAAM,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,GAAG,EAAE;YACN,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QAED,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,gFAAgF;QAChF,aAAa;QACb,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;;IACvD,CAAC;IAEM,+BAAI,GAAX,UAAY,IAAY;QAAxB,iBA2BC;QA1BG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,CAAC;YACvB,GAAG,CAAC,OAAO,CAAC,UAAC,UAAU,EAAE,CAAS;gBAC9B,UAAU,CAAC,aAAa,GAAG,0DAAW,CAClC,UAAU,CAAC,aAAa,GAAG,IAAI,GAAG,UAAU,CAAC,SAAS,CACzD,CAAC;gBACF,KAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAChB,KAAI,CAAC,GAAG,CAAC,SAAS,CACd,UAAU,CAAC,MAAM,CAAC,CAAC,EACnB,UAAU,CAAC,MAAM,CAAC,CAAC,CACtB,CAAC;gBACF,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBAC1C,KAAI,CAAC,GAAG,CAAC,SAAS,CACd,KAAI,CAAC,OAAO,EACZ,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EAC3C,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EAC3C,KAAI,CAAC,UAAU,EACf,KAAI,CAAC,UAAU,EACf,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EACjE,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,EACjE,KAAI,CAAC,UAAU,EACf,KAAI,CAAC,UAAU,CAClB,CAAC;gBACF,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAwBL,uBAAC;AAAD,CAAC,CApEqC,qFAAsB,GAoE3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxE6F;AAO5E;AACwC;AAE1D;IAAsC,oCAAsB;IAcxD,0BAAmB,KAA0B;QAA7C,YACI,kBAAM,KAAK,CAAC,SAYf;QAhBO,qBAAe,GAAG,CAAC,CAAC;QAKxB,IAAM,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAE5C,IAAI,CAAC,GAAG,EAAE;YACN,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SAC3E;QAED,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,KAAI,CAAC,UAAU,EAAE,CAAC;QAClB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,KAAI,CAAC,kBAAkB,EAAE,CAAC;;IAC9B,CAAC;IAEM,+BAAI,GAAX,UAAY,IAAY;QAAxB,iBA8CC;QA7CG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CACf,UAAC,GAAG,EAAE,CAAC;YACH,GAAG,CAAC,OAAO,CACP,UAAC,UAAU,EAAE,CAAC;gBACV,IAAM,KAAK,GAAG,4DAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC9C,KAAI,CAAC,GAAG,CAAC,SAAS,CACd,KAAI,CAAC,oBAAoB,EACzB,KAAK,CAAC,CAAC,CAAC,EACR,KAAK,CAAC,CAAC,CAAC,EACR,KAAK,CAAC,CAAC,CAAC,EACR,CAAC,CACJ,CAAC;gBACF,UAAU,CAAC,aAAa,GAAG,0DAAW,CAClC,UAAU,CAAC,aAAa,GAAG,IAAI,GAAG,UAAU,CAAC,SAAS,CACzD,CAAC;gBACF,IAAM,iBAAiB,GAAG,yCAAE,CAAC,WAAW,CACpC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,EACnC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,CACtC,CAAC;gBACF,IAAM,qBAAqB,GAAG,yCAAE,CAAC,WAAW,CACxC,CAAC,KAAI,CAAC,gBAAgB,EACtB,CAAC,KAAI,CAAC,gBAAgB,CACzB,CAAC;gBACF,IAAM,cAAc,GAAG,yCAAE,CAAC,QAAQ,CAC9B,iBAAiB,EACjB,yCAAE,CAAC,QAAQ,CACP,UAAU,CAAC,aAAa,CAC3B,CACJ,CAAC;gBAEF,KAAI,CAAC,GAAG,CAAC,gBAAgB,CACrB,KAAI,CAAC,uBAAuB,EAC5B,KAAK,EACL,yCAAE,CAAC,QAAQ,CACP,cAAc,EACd,qBAAqB,CACxB,CACJ,CAAC;gBACF,KAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,CAAC,CACJ,CAAC;QACN,CAAC,CACJ,CAAC;IACN,CAAC;IAEO,qCAAU,GAAlB,UAAmB,MAAyB;QACxC,IAAM,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,IAAM,WAAW,GAAG,KAAG,IAAI,CAAC,WAAW,GAAG,aAAe,CAAC;QAC1D,IAAM,YAAY,GAAG,KAAG,IAAI,CAAC,WAAW,GAAG,aAAe,CAAC;QAC3D,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,GAAG,EAAE;YACN,MAAM,IAAI,KAAK,CACX,mDAAmD,CACtD,CAAC;SACL;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAEjD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,CAAC,QAAQ,CACb,CAAC,EACD,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EACrB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CACzB,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,sCAAsC;QACtC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC1E,CAAC;IAEO,qCAAU,GAAlB;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,sEAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC/E,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAC/E,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAC3E,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACrE,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;QACvF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;IAC7E,CAAC;IAEO,4CAAiB,GAAzB;QACI,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAEzC,IAAI,CAAC,OAAO,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SACpD;QAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC/C,IAAM,SAAS,GAAa,EAAE,CAAC;QAE/B,IAAI,CAAC,cAAc,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,UAAU,CACf,IAAI,CAAC,GAAG,CAAC,YAAY,EACrB,IAAI,CAAC,cAAc,CACtB,CAAC;QACF,8BAA8B;QAC9B,IAAM,MAAM,GAAG,iEAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,IAAM,KAAK,GAAG,iEAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE9E,+CAA+C;QAC/C,mDAAmD;QACnD,SAAS,CAAC,IAAI,CACV,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,MAAM,EACb,MAAM,EAAE,KAAK,EACb,MAAM,EAAE,KAAK,EACb,KAAK,EAAE,MAAM,EACb,KAAK,EAAE,KAAK,CACf,CAAC;QACF,QAAQ;QACR,IAAI;QAEJ,IAAI,CAAC,GAAG,CAAC,UAAU,CACf,IAAI,CAAC,GAAG,CAAC,YAAY,EACrB,IAAI,YAAY,CAAC,SAAS,CAAC,EAC3B,IAAI,CAAC,GAAG,CAAC,WAAW,CACvB,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,mBAAmB,CACxB,IAAI,CAAC,6BAA6B,EAClC,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,KAAK,EACd,KAAK,EACL,CAAC,EACD,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAC5B,IAAI,CAAC,6BAA6B,CACrC,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,GAAG,CAAC,SAAS,CACd,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,MAAM,EAAE,EACb,IAAI,CAAC,MAAM,EAAE,EACb,IAAI,CAAC,MAAM,EAAE,EACb,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,UAAU,CACf,IAAI,CAAC,GAAG,CAAC,UAAU,EACnB,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,IAAI,EACb,IAAI,CAAC,GAAG,CAAC,IAAI,EACb,IAAI,CAAC,GAAG,CAAC,aAAa,EACtB,IAAI,CAAC,OAAO,CACf,CAAC;QAEF,IAAI,yDAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,yDAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACnE,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAChD;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAClB,IAAI,CAAC,GAAG,CAAC,UAAU,EACnB,IAAI,CAAC,GAAG,CAAC,cAAc,EACvB,IAAI,CAAC,GAAG,CAAC,aAAa,CACzB,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,aAAa,CAClB,IAAI,CAAC,GAAG,CAAC,UAAU,EACnB,IAAI,CAAC,GAAG,CAAC,cAAc,EACvB,IAAI,CAAC,GAAG,CAAC,aAAa,CACzB,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,aAAa,CAClB,IAAI,CAAC,GAAG,CAAC,UAAU,EACnB,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAC3B,IAAI,CAAC,GAAG,CAAC,MAAM,CAClB,CAAC;SACL;IACL,CAAC;IAEO,6CAAkB,GAA1B;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QACzC,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QACzC,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAE/C,IAAI,CAAC,cAAc,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,UAAU,CACf,IAAI,CAAC,GAAG,CAAC,YAAY,EACrB,IAAI,CAAC,cAAc,CACtB,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,UAAU,CACf,IAAI,CAAC,GAAG,CAAC,YAAY,EACrB,IAAI,YAAY,CAAC;YACb,EAAE,EAAG,EAAE;YACP,EAAE,EAAG,EAAE;YACP,EAAE,EAAG,EAAE;YACP,EAAE,EAAG,EAAE;YACP,EAAE,EAAG,EAAE;YACP,EAAE,EAAG,EAAE;SACV,CAAC,EACF,IAAI,CAAC,GAAG,CAAC,WAAW,CACvB,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,mBAAmB,CACxB,IAAI,CAAC,yBAAyB,EAC9B,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,KAAK,EACd,KAAK,EACL,CAAC,GAAG,CAAC,EACL,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAC5B,IAAI,CAAC,yBAAyB,CACjC,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACrB,IAAI,CAAC,yBAAyB,EAC9B,KAAK,EACL,yCAAE,CAAC,UAAU,CACT,IAAI,CAAC,MAAM,CAAC,WAAW,EACtB,IAAI,CAAC,MAAM,CAAC,YAAY,CAC5B,CACJ,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACrB,IAAI,CAAC,uBAAuB,EAC5B,KAAK,EACL,yCAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CACpC,CAAC;IACN,CAAC;IACL,uBAAC;AAAD,CAAC,CA7QqC,qFAAsB,GA6Q3D;;;;;;;;;;;;;;ACtRD;AAAA;AAAA;AAAA;AAQkB;AACc;AAyBhC;IAeI,gCAAmB,KAA0B;QAA7C,iBAkCC;QA/CS,WAAM,GAAmB,EAAE,CAAC;QAS5B,WAAM,GAAG,CAAC,CAAC;QAEX,WAAM,GAAG,CAAC,CAAC;QAqGb,YAAO,GAAG,UAAC,CAAa;YAC5B,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE;gBAClB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;aACzD;YAED,IAAM,WAAW,GAAW;gBACxB,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI;gBACjC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG;aACnC,CAAC;YAEF,IAAM,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACrD,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAE7D,IAAI,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE;gBAC1C,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,SAAsB,CAAC;gBAC9D,UAAU,CAAC,KAAK,GAAG,6DAAc,EAAE,CAAC;gBACpC,gFAAgF;gBAChF,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAChC,UAAU,EACV,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,CACrD,CAAC,CAAC;aACN;QACL,CAAC;QAxHG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,IAAI,EAAE,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,IAAI,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAM,WAAW,GAAG,MAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU;cAChC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CACxC,CAAC;QACH,IAAM,YAAY,GAAG,MACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU;cAChC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CACxC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,0DAA0D;QAE1D,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAClD,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEjD,IAAI,CAAC,UAAU,EAAE;YACb,MAAM,KAAK,CAAC,0DAA0D,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEM,2CAAU,GAAjB;QACI,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,6DAA6D;QAC7D,OAAO,IAAI,CAAC,UAAU,CAAC;QACvB,OAAO,IAAI,CAAC,GAAG,CAAC;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAIO,+CAAc,GAAtB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAM,KAAK,GAAG,6DAAc,EAAE,CAAC;gBAC/B,IAAM,aAAa,GAAG,CAAC,CAAC;gBACxB,IAAM,UAAU,GAAG,iEAAkB,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;gBACzD,IAAM,QAAQ,GAAG,UAAU,GAAG,iEAAkB,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC9E,IAAM,KAAK,GAAG,IAAI,4CAAK,CAAC;oBACpB,KAAK;oBACL,UAAU;oBACV,QAAQ;oBACR,WAAW,EAAE,IAAI,CAAC,gBAAgB;oBAClC,WAAW,EAAE,IAAI,CAAC,gBAAgB;oBAClC,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;oBAChB,KAAK;oBACL,KAAK;oBACL,SAAS,EAAE,iEAAkB,EAAE;oBAC/B,aAAa;oBACb,UAAU;oBACV,QAAQ;oBACR,MAAM,EAAE;wBACJ,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM;wBAC5D,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM;qBAC/D;iBACJ,CAAC;gBAEF,IAAI,CAAC,UAAU,CAAC,SAAS,CACrB,KAAK,CAAC,SAAS,EAAE,EACjB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,EACf,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAC3C,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAC3C,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,CAClB,CAAC;aACL;SACJ;IACL,CAAC;IA0BO,+CAAc,GAAtB,UAAuB,MAAc;QACjC,OAAO;YACH,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YACnE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SACtE,CAAC;IACN,CAAC;IAEO,2CAAU,GAAlB,UAAmB,UAAsB,EAAE,WAAmB;QAClD,8BAAM,EAAE,wCAAa,CAAgB;QACvC,sCAAU,EAAE,8BAAQ,CAAgB;QAE1C,UAAU,GAAG,0DAAW,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC;QACrD,UAAU,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;QACpE,QAAQ,GAAG,0DAAW,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC;QACjD,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;QAE5D,IAAM,aAAa,GAAG,0DAAW,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACvD,IAAM,aAAa,GAAG,UAAU,GAAG,QAAQ,CAAC;QAC5C,IAAI,UAAU,GAAG,uDAAQ,CAAC,uDAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;QAEzD,UAAU,GAAG,aAAa,IAAI,UAAU,GAAG,QAAQ;YAC/C,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,UAAU;YAC1B,CAAC,CAAC,UAAU,CAAC;QAEjB,OAAO,IAAI,CAAC,gBAAgB,IAAI,aAAa;eACtC,IAAI,CAAC,gBAAgB,IAAI,aAAa;eACtC,UAAU,IAAI,UAAU;eACxB,UAAU,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC7E,CAAC;IACL,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjMD;AAAA;AAAA;IAUI,eAAY,KAAiB;QAA7B,iBAmBC;QAEM,cAAS,GAAG,cAAM,YAAI,CAAC,MAAM,EAAX,CAAW,CAAC;QAE9B,aAAQ,GAAG,UAAC,KAAa;YAC5B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,KAAI,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC;QAzBG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpD,IAAI,CAAC,GAAG,EAAE;YACN,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QAED,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IASO,oBAAI,GAAZ;QACI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1E,6DAA6D;QAC7D,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,uBAAuB;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CACR,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,QAAQ,EACb,KAAK,CACJ,CAAC;QACN,+BAA+B;QAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CACR,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,EACf,IAAI,CACH,CAAC;QACN,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAElB,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjFD;AAAA;AAAA;AAAA;AAAsD;AACA;AACZ;AAE1C,IAAK,aAGJ;AAHD,WAAK,aAAa;IACd,kCAAiB;IACjB,kCAAiB;AACrB,CAAC,EAHI,aAAa,KAAb,aAAa,QAGjB;AAED,IAAM,YAAY,GAAG;IACjB,IAAI,EAAE,kEAAgB;IACtB,IAAI,EAAE,kEAAgB;CACzB,CAAC;AACF,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAsB,CAAC;AAC5E,IAAM,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;AACtE,IAAI,MAAyB,CAAC;AAC9B,IAAI,cAA0D,CAAC;AAC/D,IAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAgB,CAAC;AAClF,IAAI,gBAAgB,GAA6C,CAAC,CAAC;AAEnE,SAAS,OAAO,CAAC,GAAkB;IAC/B,OAAO,eAAa,GAAK,CAAC;AAC9B,CAAC;AAED,SAAS,SAAS,CAAC,GAAW;IAC1B,MAAM,CAAC,IAAI,GAAG,YAAY,CAAC;IAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,aAAa;IAClB,IAAI,CAAC,eAAe,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;KACvD;IAED,IAAI,MAAM,IAAI,cAAc,EAAE;QAC1B,cAAc,CAAC,UAAU,EAAE,CAAC;QAC5B,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACpC,cAAc,GAAG,IAAI,CAAC;KACzB;IAED,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAE1C,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,KAAK,CAAE,aAA4B,EAAE,UAAe;IAAf,4CAAe;IACzD,IAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAErC,aAAa,EAAE,CAAC;IAChB,cAAc,GAAG,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC;QAC7C,MAAM;QACN,WAAW,EAAE,UAAU;QACvB,WAAW,EAAE,UAAU;KAC1B,CAAC,CAAC;IACH,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC1B,CAAC;AAED,SAAS,GAAG,CAAC,gBAAwB;IACjC,IAAM,iBAAiB,GAAG,IAAI,CAAC;IAC/B,IAAI,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;IACnC,IAAI,aAAa,GAAG,UAAU,CAAC;IAE/B,IAAM,UAAU,GAAG,UAAC,IAAY;QAC5B,IAAI,CAAC,cAAc,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC/C;QAED,IAAM,KAAK,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,IAAI,CAAC;QACzC,IAAM,IAAI,GAAG,gBAAgB,GAAG,KAAK,CAAC;QAEtC,IAAI,IAAI,GAAG,aAAa,IAAI,iBAAiB,EAAE;YAC3C,IAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;YACtB,SAAS,CAAI,8DAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,SAAM,CAAC,CAAC;YACvD,aAAa,GAAG,IAAI,CAAC;SACxB;QAED,UAAU,GAAG,IAAI,CAAC;QAClB,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;IAChE,CAAC,CAAC;IACF,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;AAChE,CAAC;AAED,SAAS,iBAAiB,CAAC,CAAa;IACpC,IAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAE7D,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;IAEvC,IAAI,YAAa,CAAC,SAAS,KAAK,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;QAC/D,YAAa,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC5D,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;KACnC;SAAM;QACH,YAAa,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC5D,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;KACnC;AACL,CAAC;AAED,IAAM,gBAAgB,GAAG,aAAa,CAAC,UAAU,CAAC;AAElD,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC1C,IAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAC7D,YAAa,CAAC,SAAS,GAAG,OAAO,CAC7B,gBAAgB,KAAK,aAAa,CAAC,UAAU;QACzC,CAAC,CAAC,aAAa,CAAC,UAAU;QAC1B,CAAC,CAAC,aAAa,CAAC,UAAU,CACjC,CAAC;IACF,YAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAC3D,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAEH,IAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;AAE3D,YAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAC,CAAM;IAC5C,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACnHH;AAAA;AAAA;IAOI,wBAAY,IAAY,EAAE,GAA0B;QAH5C,eAAU,GAA8B,EAAE,CAAC;QAC3C,aAAQ,GAA6C,EAAE,CAAC;QAG5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAEzC,IAAI,CAAC,OAAO,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC3D;QACD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEM,gCAAO,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,4BAAG,GAAV;QACI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAEM,6CAAoB,GAA3B,UAA4B,IAAY;QACpC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,sCAAmC,IAAI,2BAAqB,IAAI,CAAC,IAAM,CAAC,CAAC;SAC5F;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,2CAAkB,GAAzB,UAA0B,IAAY;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,oCAAiC,IAAI,2BAAqB,IAAI,CAAC,IAAM,CAAC,CAAC;SAC1F;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAES,6BAAI,GAAd,UAAe,YAAoB,EAAE,cAAsB;QACvD,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3E,IAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAEjF,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAEjD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,mCAAU,GAAlB,UAAmB,MAAc,EAAE,UAAkB;QACjD,IAAM,MAAM,GAAuB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAErE,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,IAAI,KAAK,CACX,CACI,UAAU,KAAK,IAAI,CAAC,GAAG,CAAC,aAAa;gBACrC,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,UAAU,mCAA+B,CAClD,CAAC;SACL;QAED,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAE,CAAC,IAAI,EAAE,CAAC;QAExD,IAAI,KAAK,KAAK,EAAE,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,8BAA2B,IAAI,CAAC,IAAI,YAAM,KAAO,CAAC,CAAC;SACtE;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,sCAAa,GAArB,UAAsB,YAAyB,EAAE,cAA2B;QACxE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,IAAI,EAAE,CAAC;QAE/D,IAAI,KAAK,KAAK,EAAE,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,4BAAyB,IAAI,CAAC,IAAI,YAAM,KAAO,CAAC,CAAC;SACpE;IACL,CAAC;IAEO,sCAAa,GAArB;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC3D;QAED,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE9F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,EAAE,CAAC,EAAE;YACrC,IAAM,IAAI,GAA2B,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAE/E,IAAI,CAAC,IAAI,EAAE;gBACP,MAAM;aACT;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACpF;IACL,CAAC;IAEO,oCAAW,GAAnB;QACI,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC1F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;YACnC,IAAM,IAAI,GAA2B,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAEhF,IAAI,CAAC,IAAI,EAAE;gBACP,MAAM;aACT;YAED,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAE7E,IAAI,CAAC,eAAe,EAAE;gBAClB,MAAM;aACT;YAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC;SAC9C;IACL,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HyD;AACI;AACX;AAEnD;IAAiC,+BAAc;IAC3C,qBAAY,GAA0B;QAAtC,YACI,kBAAM,OAAO,EAAE,GAAG,CAAC,SAGtB;QADG,KAAI,CAAC,IAAI,CAAC,oEAAY,EAAE,sEAAc,CAAC,CAAC;;IAC5C,CAAC;IACL,kBAAC;AAAD,CAAC,CANgC,8DAAc,GAM9C;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,eAAe,CAAC,KAAa,EAAE,QAAgB;IAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC/E,CAAC;AAEM,SAAS,kBAAkB,CAC9B,GAAW,EACX,SAAiB,EACjB,OAAe,EACf,OAAe,EACf,KAAa;IAEb,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,OAAO,CAAC;AACnF,CAAC;AAEM,SAAS,aAAa,CAAC,KAAa;IACvC,IAAM,SAAS,GAAG;QACd,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACnC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;KACnC,CAAC;IAEF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAC,IAAI,yBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;AACnE,CAAC;AAEM,SAAS,cAAc;IAC1B,IAAM,MAAM,GAAG,kBAAkB,CAAC;IAClC,IAAI,KAAK,GAAG,GAAG,CAAC;IAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;KACnD;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAEM,SAAS,QAAQ,CAAC,MAAc,EAAE,KAAa;IAClD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC;AAEM,SAAS,QAAQ,CAAC,KAAa;IAClC,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;AACnD,CAAC;AAEM,SAAS,WAAW,CAAC,EAAU,EAAE,EAAU;IAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AAEM,SAAS,WAAW,CAAC,KAAa;IACrC,OAAO,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACjC,CAAC;AAEM,SAAS,kBAAkB,CAAC,GAAW,EAAE,GAAW;IACvD,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAC7C,CAAC;AAEM,SAAS,kBAAkB;IAC9B,OAAO,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC;AAEM,SAAS,UAAU,CAAC,KAAa;IACpC,4BAA4B;IAC5B,OAAO,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACvC,CAAC;AAEM,IAAM,EAAE,GAAG;IACd,QAAQ,EAAE;QACN,OAAO;YACH,CAAC,EAAE,CAAC,EAAE,CAAC;YACP,CAAC,EAAE,CAAC,EAAE,CAAC;YACP,CAAC,EAAE,CAAC,EAAE,CAAC;SACV,CAAC;IACN,CAAC;IAED,UAAU,EAAE,UAAC,KAAa,EAAE,MAAc;QACtC,OAAO;YACH,GAAG,GAAG,KAAK,EAAG,GAAG,EAAW,GAAG;YAC/B,GAAG,EAAU,CAAC,GAAG,GAAG,MAAM,EAAE,GAAG;YAC/B,CAAC,GAAG,EAAU,GAAG,EAAW,GAAG;SAClC,CAAC;IACN,CAAC;IAED,WAAW,EAAE,UAAC,EAAU,EAAE,EAAU;QAChC,OAAO;YACH,CAAC,EAAE,CAAC,EAAE,CAAC;YACP,CAAC,EAAE,CAAC,EAAE,CAAC;YACP,EAAE,EAAE,EAAE,EAAE,CAAC;SACZ,CAAC;IACN,CAAC;IAED,QAAQ,EAAE,UAAC,cAAsB;QAC7B,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACnC,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACnC,OAAO;YACH,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YACR,CAAC,EAAG,CAAC,EAAE,CAAC;YACR,CAAC,EAAG,CAAC,EAAE,CAAC;SACX,CAAC;IACN,CAAC;IAED,OAAO,EAAE,UAAC,EAAU,EAAE,EAAU;QAC5B,OAAO;YACH,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,CAAC,EAAE,EAAE,EAAE,CAAC;YACR,CAAC,EAAE,CAAC,EAAG,CAAC;SACX,CAAC;IACN,CAAC;IAED,QAAQ,EAAE,UAAC,CAAW,EAAE,CAAW;QAC/B,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEzB,OAAO;YACL,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;SAClC,CAAC;IACJ,CAAC;CACN,CAAC","file":"dancing-donuts.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export default \"varying highp vec2 vTextureCoord;\\n\\nuniform highp sampler2D uSampler;\\nuniform highp vec4 uColor;\\n\\nvoid main(void) {\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;\\n}\\n\"","export default \"attribute highp vec2 aPosition;\\nattribute highp vec2 aTextureCoord;\\n\\nuniform highp mat3 uProjection;\\nuniform highp mat3 uRotation;\\n\\nvarying highp vec2 vTextureCoord;\\n\\nvoid main() {\\n    gl_Position = vec4((uProjection * uRotation * vec3(aPosition, 1)).xy, 0, 1);\\n    vTextureCoord = aTextureCoord;\\n}\\n\"","import { AbstractDonutContainer, DonutContainerProps } from \"./common/AbstractDonutContainer\";\nimport { reduceAngle } from \"./utils\";\nimport { Coords } from \"./common/types\";\n\nexport class DonutContainer2D extends AbstractDonutContainer {\n    protected ctx: CanvasRenderingContext2D;\n\n    public constructor(props: DonutContainerProps) {\n        super(props);\n        const ctx = this.canvas.getContext(\"2d\");\n\n        if (!ctx) {\n            throw new Error(\"Canvas 2d rendering context failed to initialise!\");\n        }\n\n        this.ctx = ctx;\n        // TODO: Ugly hack. Try to come up with better approach to change 2D donut color\n        // @ts-ignore\n        window.addEventListener(\"donutHit\", this.donutHit);\n    }\n\n    public draw(step: number): void {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.donuts.forEach((row, x) => {\n            row.forEach((donutState, y: number) => {\n                donutState.rotationAngle = reduceAngle(\n                    donutState.rotationAngle + step * donutState.clockwise\n                );\n                this.ctx.save();\n                this.ctx.translate(\n                    donutState.center.x,\n                    donutState.center.y\n                );\n                this.ctx.rotate(donutState.rotationAngle);\n                this.ctx.drawImage(\n                    this.sprites,\n                    x * this.donutWidth + (x + 1) * this.margin,\n                    y * this.donutWidth + (y + 1) * this.margin,\n                    this.donutWidth,\n                    this.donutWidth,\n                    x * this.donutWidth - donutState.center.x + (x + 1) * this.margin,\n                    y * this.donutWidth - donutState.center.y + (y + 1) * this.margin,\n                    this.donutWidth,\n                    this.donutWidth\n                );\n                this.ctx.restore();\n            });\n        });\n    }\n\n    private donutHit = (e: CustomEvent<Coords>) => {\n        const { x, y } = e.detail;\n        const { donut, color } = this.donuts[x][y];\n        donut.setColor(color);\n        this.spritesCtx.clearRect(\n            x * this.donutWidth + (x + 1) * this.margin,\n            y * this.donutWidth + (y + 1) * this.margin,\n            this.donutWidth,\n            this.donutWidth\n        );\n        this.spritesCtx.drawImage(\n            donut.getSprite(),\n            0,\n            0,\n            this.donutWidth,\n            this.donutWidth,\n            x * this.donutWidth + (x + 1) * this.margin,\n            y * this.donutWidth + (y + 1) * this.margin,\n            this.donutWidth,\n            this.donutWidth,\n        );\n    }\n}\n","import { AbstractDonutContainer, DonutContainerProps } from \"./common/AbstractDonutContainer\";\nimport {\n    m3,\n    isPowerOf2,\n    reduceAngle,\n    splitHexColor,\n    mapValueToInterval,\n } from \"./utils\";\nimport { BasicShader } from \"./shaders/basic/BasicShader\";\n\nexport class DonutContainer3D extends AbstractDonutContainer {\n    protected ctx: WebGLRenderingContext;\n    private shader!: BasicShader;\n    private rotationUniformLocation!: WebGLUniformLocation;\n    private positionAttributeLocation!: number;\n    private projectionUniformLocation!: WebGLUniformLocation;\n    private colorUniformLocation!: WebGLUniformLocation;\n    private textureCoordAttributeLocation!: number;\n    private samplerUniformLocation!: WebGLUniformLocation;\n    private positionBuffer!: WebGLBuffer;\n    private texCoordBuffer!: WebGLBuffer;\n    private initialRotation = 0;\n    private texture!: WebGLTexture;\n\n    public constructor(props: DonutContainerProps) {\n        super(props);\n        const ctx = this.canvas.getContext(\"webgl\");\n\n        if (!ctx) {\n            throw new Error(\"Canvas WebGL rendering context failed to initialise!\");\n        }\n\n        this.ctx = ctx;\n        this.initCanvas(this.canvas);\n        this.initShader();\n        this.initTextureCoords();\n        this.initPositionCoords();\n    }\n\n    public draw(step: number): void {\n        this.ctx.clearColor(0, 0, 0, 0);\n        this.ctx.clear(this.ctx.COLOR_BUFFER_BIT);\n        this.donuts.forEach(\n            (row, x) => {\n                row.forEach(\n                    (donutState, y) => {\n                        const color = splitHexColor(donutState.color);\n                        this.ctx.uniform4f(\n                            this.colorUniformLocation,\n                            color[0],\n                            color[1],\n                            color[2],\n                            1\n                        );\n                        donutState.rotationAngle = reduceAngle(\n                            donutState.rotationAngle + step * donutState.clockwise\n                        );\n                        const translationMatrix = m3.translation(\n                            (2 * x + 1) * this.donutOuterRadius,\n                            (2 * y + 1) * this.donutOuterRadius\n                        );\n                        const undoTranslationMatrix = m3.translation(\n                            -this.donutOuterRadius,\n                            -this.donutOuterRadius\n                        );\n                        const rotationMatrix = m3.multiply(\n                            translationMatrix,\n                            m3.rotation(\n                                donutState.rotationAngle\n                            )\n                        );\n\n                        this.ctx.uniformMatrix3fv(\n                            this.rotationUniformLocation,\n                            false,\n                            m3.multiply(\n                                rotationMatrix,\n                                undoTranslationMatrix\n                            )\n                        );\n                        this.ctx.drawArrays(this.ctx.TRIANGLES, 0, 6);\n                    }\n                );\n            }\n        );\n    }\n\n    private initCanvas(canvas: HTMLCanvasElement) {\n        const donutDiameter = 2 * this.donutOuterRadius;\n        const canvasWidth = `${this.donutCountX * donutDiameter}`;\n        const canvasHeight = `${this.donutCountY * donutDiameter}`;\n        const ctx = canvas.getContext(\"webgl\");\n\n        if (!ctx) {\n            throw new Error(\n                \"Canvas 3D rendering context failed to initialise!\"\n            );\n        }\n\n        this.canvas = canvas;\n        this.canvas.setAttribute(\"width\", canvasWidth);\n        this.canvas.setAttribute(\"height\", canvasHeight);\n\n        this.ctx = ctx;\n        this.ctx.viewport(\n            0,\n            0,\n            this.ctx.canvas.width,\n            this.ctx.canvas.height\n        );\n\n        this.ctx.enable(this.ctx.BLEND);\n        this.ctx.blendFunc(this.ctx.ONE, this.ctx.ONE);\n        this.ctx.disable(this.ctx.DEPTH_TEST);\n        this.ctx.clearColor(0, 0, 0, 0);\n        // tslint:disable-next-line:no-bitwise\n        this.ctx.clear(this.ctx.COLOR_BUFFER_BIT | this.ctx.DEPTH_BUFFER_BIT);\n    }\n\n    private initShader() {\n        this.shader = new BasicShader(this.ctx);\n        this.shader.use();\n\n        this.positionAttributeLocation = this.shader.getAttributeLocation(\"aPosition\");\n        this.projectionUniformLocation = this.shader.getUniformLocation(\"uProjection\");\n        this.rotationUniformLocation = this.shader.getUniformLocation(\"uRotation\");\n        this.colorUniformLocation = this.shader.getUniformLocation(\"uColor\");\n        this.textureCoordAttributeLocation = this.shader.getAttributeLocation(\"aTextureCoord\");\n        this.samplerUniformLocation = this.shader.getUniformLocation(\"uSampler\");\n    }\n\n    private initTextureCoords() {\n        const texture = this.ctx.createTexture();\n\n        if (!texture) {\n            throw new Error(\"Texture failed to initialise!\");\n        }\n\n        this.texture = texture;\n        const texCoordBuffer = this.ctx.createBuffer();\n        const texCoords: number[] = [];\n\n        if (!texCoordBuffer) {\n            throw new Error(\"Texture coordinate buffer failed to initialise!\");\n        }\n\n        this.texCoordBuffer = texCoordBuffer;\n        this.ctx.bindBuffer(\n            this.ctx.ARRAY_BUFFER,\n            this.texCoordBuffer\n        );\n        // TODO: init tex coord buffer\n        const margin = mapValueToInterval(this.margin, 0, this.canvas.width, 0, 1);\n        const width = mapValueToInterval(this.donutWidth, 0, this.canvas.width, 0, 1);\n\n        // for (let x = 0; x < this.donutCountX; x++) {\n        //     for (let y = 0; y < this.donutCountY; y++) {\n        texCoords.push(\n            margin, margin,\n            width, margin,\n            margin, width,\n            margin, width,\n            width, margin,\n            width, width\n        );\n        //     }\n        // }\n\n        this.ctx.bufferData(\n            this.ctx.ARRAY_BUFFER,\n            new Float32Array(texCoords),\n            this.ctx.STATIC_DRAW\n        );\n\n        this.ctx.vertexAttribPointer(\n            this.textureCoordAttributeLocation,\n            2,\n            this.ctx.FLOAT,\n            false,\n            0,\n            0\n        );\n        this.ctx.enableVertexAttribArray(\n            this.textureCoordAttributeLocation\n        );\n\n        this.ctx.activeTexture(this.ctx.TEXTURE0);\n        this.ctx.uniform1i(this.samplerUniformLocation, 0);\n        this.ctx.uniform4f(\n            this.colorUniformLocation,\n            Math.random(),\n            Math.random(),\n            Math.random(),\n            1\n        );\n        this.ctx.bindTexture(this.ctx.TEXTURE_2D, this.texture);\n        this.ctx.texImage2D(\n            this.ctx.TEXTURE_2D,\n            0,\n            this.ctx.RGBA,\n            this.ctx.RGBA,\n            this.ctx.UNSIGNED_BYTE,\n            this.sprites\n        );\n\n        if (isPowerOf2(this.sprites.width) && isPowerOf2(this.sprites.height)) {\n            this.ctx.generateMipmap(this.ctx.TEXTURE_2D);\n        } else {\n            this.ctx.texParameteri(\n                this.ctx.TEXTURE_2D,\n                this.ctx.TEXTURE_WRAP_S,\n                this.ctx.CLAMP_TO_EDGE\n            );\n            this.ctx.texParameteri(\n                this.ctx.TEXTURE_2D,\n                this.ctx.TEXTURE_WRAP_T,\n                this.ctx.CLAMP_TO_EDGE\n            );\n            this.ctx.texParameteri(\n                this.ctx.TEXTURE_2D,\n                this.ctx.TEXTURE_MIN_FILTER,\n                this.ctx.LINEAR\n            );\n        }\n    }\n\n    private initPositionCoords() {\n        const x1 = this.margin;\n        const x2 = this.margin + this.donutWidth;\n        const y1 = this.margin;\n        const y2 = this.margin + this.donutWidth;\n        const positionBuffer = this.ctx.createBuffer();\n\n        if (!positionBuffer) {\n            throw new Error(\"Position buffer failed to initialise!\");\n        }\n\n        this.positionBuffer = positionBuffer;\n        this.ctx.bindBuffer(\n            this.ctx.ARRAY_BUFFER,\n            this.positionBuffer\n        );\n        this.ctx.bufferData(\n            this.ctx.ARRAY_BUFFER,\n            new Float32Array([\n                x1,  y1,\n                x2,  y1,\n                x1,  y2,\n                x1,  y2,\n                x2,  y1,\n                x2,  y2,\n            ]),\n            this.ctx.STATIC_DRAW\n        );\n        this.ctx.vertexAttribPointer(\n            this.positionAttributeLocation,\n            2,\n            this.ctx.FLOAT,\n            false,\n            2 * 4,\n            0\n        );\n        this.ctx.enableVertexAttribArray(\n            this.positionAttributeLocation\n        );\n        this.ctx.uniformMatrix3fv(\n            this.projectionUniformLocation,\n            false,\n            m3.projection(\n                this.canvas.clientWidth,\n                 this.canvas.clientHeight\n            )\n        );\n        this.ctx.uniformMatrix3fv(\n            this.rotationUniformLocation,\n            false,\n            m3.rotation(this.initialRotation)\n        );\n    }\n}\n","import { Coords, ClockWise } from \"./types\";\nimport {\n    getRandomDirection,\n    getRandomArbitrary,\n    getRandomColor,\n    getDistance,\n    atan2Arc,\n    getAngle,\n    reduceAngle,\n} from \"../utils\";\nimport { Donut } from \"./Donut\";\n\nexport interface DonutState {\n    donut: Donut;\n    color: string;\n    startAngle: number;\n    endAngle: number;\n    clockwise: ClockWise;\n    rotationAngle: number;\n    center: Coords;\n}\n\nexport interface DonutContainer {\n    destructor(): void;\n    draw(step: number): void;\n}\n\nexport interface DonutContainerProps {\n    canvas: HTMLCanvasElement;\n    donutCountX?: number;\n    donutCountY?: number;\n    donutOuterRadius?: number;\n    donutInnerRadius?: number;\n}\n\nexport abstract class AbstractDonutContainer implements DonutContainer {\n    protected abstract ctx: CanvasRenderingContext2D | WebGLRenderingContext;\n    protected donuts: DonutState[][] = [];\n    protected canvas: HTMLCanvasElement;\n    protected canvasRect: ClientRect;\n    protected donutCountX: number;\n    protected donutCountY: number;\n    protected donutOuterRadius: number;\n    protected donutInnerRadius: number;\n    protected sprites: HTMLCanvasElement;\n    protected spritesCtx: CanvasRenderingContext2D;\n    protected border = 1;\n    protected donutWidth: number;\n    protected margin = 1;\n\n    public constructor(props: DonutContainerProps) {\n        this.canvas = props.canvas;\n        this.canvasRect = this.canvas.getBoundingClientRect();\n        this.donutCountX = props.donutCountX || 20;\n        this.donutCountY = props.donutCountY || 20;\n        this.donutOuterRadius = props.donutOuterRadius || 25;\n        this.donutInnerRadius = props.donutInnerRadius || 10;\n        this.donutWidth = 2 * (this.donutOuterRadius + this.border);\n\n        const canvasWidth = `${\n            this.donutCountX * this.donutWidth\n            + (this.donutCountX + 1) * this.margin\n        }`;\n        const canvasHeight = `${\n            this.donutCountY * this.donutWidth\n            + (this.donutCountY + 1) * this.margin\n        }`;\n\n        this.canvas.setAttribute(\"width\", canvasWidth);\n        this.canvas.setAttribute(\"height\", canvasHeight);\n        this.canvas.addEventListener(\"click\", this.onClick);\n        // this.canvas.addEventListener(\"touchend\", this.onClick);\n\n        this.sprites = document.createElement(\"canvas\");\n        this.sprites.setAttribute(\"width\", canvasWidth);\n        this.sprites.setAttribute(\"height\", canvasHeight);\n        const spritesCtx = this.sprites.getContext(\"2d\");\n\n        if (!spritesCtx) {\n            throw Error(\"Sprite canvas 2d rendering context failed to initialise!\");\n        }\n\n        this.spritesCtx = spritesCtx;\n        this.initDonutState();\n    }\n\n    public destructor() {\n        this.canvas.removeEventListener(\"click\", this.onClick);\n        // this.canvas.removeEventListener(\"touchend\", this.onClick);\n        delete this.canvasRect;\n        delete this.ctx;\n        delete this.canvas;\n        delete this.donuts;\n        delete this.sprites;\n        delete this.spritesCtx;\n        delete this.donutCountX;\n        delete this.donutCountY;\n        delete this.donutInnerRadius;\n        delete this.donutOuterRadius;\n        delete this.border;\n        delete this.donutWidth;\n    }\n\n    public abstract draw(step: number): void;\n\n    private initDonutState() {\n        for (let x = 0; x < this.donutCountX; x++) {\n            this.donuts[x] = [];\n            for (let y = 0; y < this.donutCountY; y++) {\n                const color = getRandomColor();\n                const rotationAngle = 0;\n                const startAngle = getRandomArbitrary(0, 1.75 * Math.PI);\n                const endAngle = startAngle + getRandomArbitrary(Math.PI / 2, 1.75 * Math.PI);\n                const donut = new Donut({\n                    color,\n                    startAngle,\n                    endAngle,\n                    innerRadius: this.donutInnerRadius,\n                    outerRadius: this.donutOuterRadius,\n                    border: this.border,\n                });\n                this.donuts[x][y] = {\n                    donut,\n                    color,\n                    clockwise: getRandomDirection(),\n                    rotationAngle,\n                    startAngle,\n                    endAngle,\n                    center: {\n                        x: (2 * x + 1) * this.donutWidth / 2 + (x + 1) * this.margin,\n                        y: (2 * y + 1) * this.donutWidth / 2 + (y + 1) * this.margin,\n                    },\n                };\n\n                this.spritesCtx.drawImage(\n                    donut.getSprite(),\n                    0,\n                    0,\n                    this.donutWidth,\n                    this.donutWidth,\n                    x * this.donutWidth + (x + 1) * this.margin,\n                    y * this.donutWidth + (y + 1) * this.margin,\n                    this.donutWidth,\n                    this.donutWidth,\n                );\n            }\n        }\n    }\n\n    private onClick = (e: MouseEvent) => {\n        if (!this.canvasRect) {\n            this.canvasRect = this.canvas.getBoundingClientRect();\n        }\n\n        const clickCoords: Coords = {\n            x: e.pageX - this.canvasRect.left,\n            y: e.pageY - this.canvasRect.top,\n        };\n\n        const donutCoords = this.getDonutCoords(clickCoords);\n        const donutState = this.donuts[donutCoords.x][donutCoords.y];\n\n        if (this.isDonutHit(donutState, clickCoords)) {\n            donutState.clockwise = -1 * donutState.clockwise as ClockWise;\n            donutState.color = getRandomColor();\n            // TODO: Ugly hack. Try to come up with better approach to change 2D donut color\n            window.dispatchEvent(new CustomEvent<Coords>(\n                \"donutHit\",\n                { detail: { x: donutCoords.x, y: donutCoords.y } }\n            ));\n        }\n    }\n\n    private getDonutCoords(coords: Coords): Coords {\n        return {\n            x: Math.floor(coords.x / 2 / (this.donutOuterRadius + this.margin)),\n            y: Math.floor(coords.y / 2 / (this.donutOuterRadius + this.margin)),\n        };\n    }\n\n    private isDonutHit(donutState: DonutState, clickCoords: Coords): boolean {\n        const { center, rotationAngle } = donutState;\n        let { startAngle, endAngle } = donutState;\n\n        startAngle = reduceAngle(startAngle + rotationAngle);\n        startAngle = startAngle < 0 ? startAngle + 2 * Math.PI : startAngle;\n        endAngle = reduceAngle(endAngle + rotationAngle);\n        endAngle = endAngle < 0 ? endAngle + 2 * Math.PI : endAngle;\n\n        const clickDistance = getDistance(center, clickCoords);\n        const startIsBigger = startAngle > endAngle;\n        let clickAngle = atan2Arc(getAngle(center, clickCoords));\n\n        clickAngle = startIsBigger && clickAngle < endAngle\n            ? 2 * Math.PI + clickAngle\n            : clickAngle;\n\n        return this.donutInnerRadius <= clickDistance\n            && this.donutOuterRadius >= clickDistance\n            && clickAngle >= startAngle\n            && clickAngle <= (startIsBigger ? 2 * Math.PI + endAngle : endAngle);\n    }\n}\n","export interface DonutProps {\n    color: string;\n    startAngle: number;\n    endAngle: number;\n    innerRadius: number;\n    outerRadius: number;\n    border: number;\n}\n\nexport class Donut {\n    private canvas: HTMLCanvasElement;\n    private ctx: CanvasRenderingContext2D;\n    private color: string;\n    private startAngle: number;\n    private endAngle: number;\n    private innerRadius: number;\n    private outerRadius: number;\n    private border: number;\n\n    constructor(props: DonutProps) {\n        this.canvas = document.createElement(\"canvas\");\n        this.border = props.border;\n        const ctx = this.canvas.getContext(\"2d\");\n        const width = 2 * (props.outerRadius + this.border);\n\n        if (!ctx) {\n            throw new Error(\"Canvas 2d rendering context failed to initialise!\");\n        }\n\n        this.ctx = ctx;\n        this.canvas.width = width;\n        this.canvas.height = width;\n        this.color = props.color;\n        this.startAngle = props.startAngle;\n        this.endAngle = props.endAngle;\n        this.innerRadius = props.innerRadius;\n        this.outerRadius = props.outerRadius;\n        this.draw();\n    }\n\n    public getSprite = () => this.canvas;\n\n    public setColor = (color: string) => {\n        this.color = color;\n        return this.draw();\n    }\n\n    private draw() {\n        this.ctx.clearRect(-1, -1, this.canvas.width + 1, this.canvas.height + 1);\n        // Reset current transformation matrix to the identity matrix\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        this.ctx.strokeStyle = \"black\";\n        this.ctx.fillStyle = this.color;\n        this.ctx.lineWidth = this.border;\n        this.ctx.beginPath();\n        this.ctx.translate(this.border, this.border);\n        // Outer arc: clockwise\n        this.ctx.arc(\n            this.outerRadius,\n            this.outerRadius,\n            this.outerRadius,\n            this.startAngle,\n            this.endAngle,\n            false\n            );\n        // Inner arc: counter clockwise\n        this.ctx.arc(\n            this.outerRadius,\n            this.outerRadius,\n            this.innerRadius,\n            this.endAngle,\n            this.startAngle,\n            true\n            );\n        this.ctx.closePath();\n        this.ctx.fill();\n        this.ctx.stroke();\n\n        return this.canvas;\n    }\n}\n","import { DonutContainer2D } from \"./DonutContainer2D\";\nimport { DonutContainer3D } from \"./DonutContainer3D\";\nimport { roundToDecimals } from \"./utils\";\n\nenum ContainerType {\n    CONTEXT_2D = \"2D\",\n    CONTEXT_3D = \"3D\",\n}\n\nconst containerMap = {\n    \"2D\": DonutContainer2D,\n    \"3D\": DonutContainer3D,\n};\nconst fpsCanvas = document.getElementById(\"fpsCanvas\") as HTMLCanvasElement;\nconst fpsCtx = fpsCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\nlet canvas: HTMLCanvasElement;\nlet donutContainer: DonutContainer2D | DonutContainer3D | null;\nconst canvasContainer = document.getElementById(\"canvasContainer\") as HTMLElement;\nlet animationFrameId: ReturnType<typeof requestAnimationFrame> = 0;\n\nfunction getText(fun: ContainerType) {\n    return `Switch to ${fun}`;\n}\n\nfunction updateFps(fps: string) {\n    fpsCtx.font = \"25px serif\";\n    fpsCtx.clearRect(0, 0, fpsCanvas.width, fpsCanvas.height);\n    fpsCtx.fillText(fps, 0, 25);\n}\n\nfunction prepareCanvas() {\n    if (!canvasContainer) {\n        throw new Error(\"Missing canvas parent container!\");\n    }\n\n    if (canvas && donutContainer) {\n        donutContainer.destructor();\n        canvasContainer.removeChild(canvas);\n        donutContainer = null;\n    }\n\n    canvas = document.createElement(\"canvas\");\n\n    canvasContainer.appendChild(canvas);\n}\n\nfunction start (containerType: ContainerType, donutCount = 20) {\n    const radiansPerSecond = Math.PI / 4;\n\n    prepareCanvas();\n    donutContainer = new containerMap[containerType]({\n        canvas,\n        donutCountX: donutCount,\n        donutCountY: donutCount\n    });\n    run(radiansPerSecond);\n}\n\nfunction run(radiansPerSecond: number) {\n    const fpsUpdateInterval = 1000;\n    let lastRender = performance.now();\n    let lastFpsUpdate = lastRender;\n\n    const renderLoop = (time: number) => {\n        if (!donutContainer) {\n            throw new Error(\"Missing donut container!\");\n        }\n\n        const delta = (time - lastRender) / 1000;\n        const step = radiansPerSecond * delta;\n\n        if (time - lastFpsUpdate >= fpsUpdateInterval) {\n            const fps = 1 / delta;\n            updateFps(`${roundToDecimals(fps, 3).toString()} FPS`);\n            lastFpsUpdate = time;\n        }\n\n        lastRender = time;\n        donutContainer.draw(step);\n        animationFrameId = window.requestAnimationFrame(renderLoop);\n    };\n    animationFrameId = window.requestAnimationFrame(renderLoop);\n}\n\nfunction toggleButtonClick(e: MouseEvent) {\n    const toggleButton = document.getElementById(\"toggleButton\");\n\n    cancelAnimationFrame(animationFrameId);\n\n    if (toggleButton!.innerText === getText(ContainerType.CONTEXT_2D)) {\n        toggleButton!.innerText = getText(ContainerType.CONTEXT_3D);\n        start(ContainerType.CONTEXT_2D);\n    } else {\n        toggleButton!.innerText = getText(ContainerType.CONTEXT_2D);\n        start(ContainerType.CONTEXT_3D);\n    }\n}\n\nconst defaultContainer = ContainerType.CONTEXT_2D;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const toggleButton = document.getElementById(\"toggleButton\");\n    toggleButton!.innerText = getText(\n        defaultContainer === ContainerType.CONTEXT_2D\n            ? ContainerType.CONTEXT_3D\n            : ContainerType.CONTEXT_2D\n    );\n    toggleButton!.addEventListener(\"click\", toggleButtonClick);\n    start(defaultContainer);\n});\n\nconst elDonutCount = document.getElementById(\"donutCount\");\n\nelDonutCount!.addEventListener(\"change\", (e: any) => {\n    start(defaultContainer, e.target.value);\n});\n","export abstract class AbstractShader {\n    private name: string;\n    private ctx: WebGLRenderingContext;\n    private program: WebGLProgram;\n    private attributes: { [name: string]: GLint } = {};\n    private uniforms: { [name: string]: WebGLUniformLocation } = {};\n\n    constructor(name: string, ctx: WebGLRenderingContext) {\n        this.name = name;\n        this.ctx = ctx;\n        const program = this.ctx.createProgram();\n\n        if (!program) {\n            throw new Error(\"Shader program failed to initialise!\");\n        }\n        this.program = program;\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n\n    public use(): void {\n        this.ctx.useProgram(this.program);\n    }\n\n    public getAttributeLocation(name: string): number {\n        if (this.attributes[name] === undefined) {\n            throw new Error(`Unable to find attribute named \"${name}\" in shader named ${this.name}`);\n        }\n\n        return this.attributes[name];\n    }\n\n    public getUniformLocation(name: string): WebGLUniformLocation {\n        if (this.uniforms[name] === undefined) {\n            throw new Error(`Unable to find uniform named \"${name}\" in shader named ${this.name}`);\n        }\n\n        return this.uniforms[name];\n    }\n\n    protected load(vertexSource: string, fragmentSource: string): void {\n        const vertexShader = this.loadShader(vertexSource, this.ctx.VERTEX_SHADER);\n        const fragmentShader = this.loadShader(fragmentSource, this.ctx.FRAGMENT_SHADER);\n\n        this.createProgram(vertexShader, fragmentShader);\n\n        this.getAttributes();\n        this.getUniforms();\n    }\n\n    private loadShader(source: string, shaderType: number): WebGLShader {\n        const shader: WebGLShader | null = this.ctx.createShader(shaderType);\n\n        if (!shader) {\n            throw new Error(\n                `${\n                    shaderType === this.ctx.VERTEX_SHADER\n                    ? \"Vertex\"\n                    : \"Fragment\"} shader failed to initialise!`\n            );\n        }\n\n        this.ctx.shaderSource(shader, source);\n        this.ctx.compileShader(shader);\n        const error = this.ctx.getShaderInfoLog(shader)!.trim();\n\n        if (error !== \"\") {\n            throw new Error(`Error compiling shader \"${this.name}\": ${error}`);\n        }\n\n        return shader;\n    }\n\n    private createProgram(vertexShader: WebGLShader, fragmentShader: WebGLShader): void {\n        this.ctx.attachShader(this.program, vertexShader);\n        this.ctx.attachShader(this.program, fragmentShader);\n        this.ctx.linkProgram(this.program);\n\n        const error = this.ctx.getProgramInfoLog(this.program)!.trim();\n\n        if (error !== \"\") {\n            throw new Error(`Error linking shader \"${this.name}\": ${error}`);\n        }\n    }\n\n    private getAttributes(): void {\n        if (!this.program) {\n            throw new Error(\"Shader program failed to initialise!\");\n        }\n\n        const attributeCount = this.ctx.getProgramParameter(this.program, this.ctx.ACTIVE_ATTRIBUTES);\n\n        for (let i = 0; i < attributeCount; ++i) {\n            const info: WebGLActiveInfo | null = this.ctx.getActiveAttrib(this.program, i);\n\n            if (!info) {\n                break;\n            }\n\n            this.attributes[info.name] = this.ctx.getAttribLocation(this.program, info.name);\n        }\n    }\n\n    private getUniforms(): void {\n        const uniformCount = this.ctx.getProgramParameter(this.program, this.ctx.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; ++i) {\n            const info: WebGLActiveInfo | null = this.ctx.getActiveUniform(this.program, i);\n\n            if (!info) {\n                break;\n            }\n\n            const uniformLocation = this.ctx.getUniformLocation(this.program, info.name);\n\n            if (!uniformLocation) {\n                break;\n            }\n\n            this.uniforms[info.name] = uniformLocation;\n        }\n    }\n}\n","import VertexShader from \"raw-loader!./VertexShader.glsl\";\nimport FragmentShader from \"raw-loader!./FragmentShader.glsl\";\nimport { AbstractShader } from \"../AbstractShader\";\n\nexport class BasicShader extends AbstractShader {\n    constructor(ctx: WebGLRenderingContext) {\n        super(\"basic\", ctx);\n\n        this.load(VertexShader, FragmentShader);\n    }\n}\n","import { ClockWise, Coords } from \"./common/types\";\n\nexport function roundToDecimals(value: number, decimals: number): number {\n    return Math.floor(value * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\nexport function mapValueToInterval(\n    val: number,\n    fromStart: number,\n    fromEnd: number,\n    toStart: number,\n    toEnd: number\n): number {\n    return (val - fromStart) * (toEnd - toStart) / (fromEnd - fromStart) + toStart;\n}\n\nexport function splitHexColor(color: string): number[] {\n    const intColors = [\n        parseInt(color.substring(1, 3), 16),\n        parseInt(color.substring(3, 5), 16),\n        parseInt(color.substring(5), 16),\n    ];\n\n    return intColors.map(c => mapValueToInterval(c, 0, 255, 0, 1));\n}\n\nexport function getRandomColor() {\n    const digits = \"0123456789ABCDEF\";\n    let color = \"#\";\n\n    for (let i = 0; i < 6; i++) {\n        color += digits[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n}\n\nexport function getAngle(center: Coords, point: Coords) {\n    return Math.atan2(point.y - center.y, point.x - center.x);\n}\n\nexport function atan2Arc(angle: number): number {\n    return angle < 0 ? 2 * Math.PI + angle : angle;\n}\n\nexport function getDistance(p1: Coords, p2: Coords): number {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n\nexport function reduceAngle(angle: number): number {\n    return angle % (2 * Math.PI);\n}\n\nexport function getRandomArbitrary(min: number, max: number): number {\n    return Math.random() * (max - min) + min;\n}\n\nexport function getRandomDirection(): ClockWise {\n    return getRandomArbitrary(-1, 1) >= 0 ? 1 : -1;\n}\n\nexport function isPowerOf2(value: number) {\n    // tslint:disable no-bitwise\n    return (value & (value - 1)) === 0;\n}\n\nexport const m3 = {\n    identity: (): number[] => {\n        return [\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1,\n        ];\n    },\n\n    projection: (width: number, height: number): number[] => {\n        return [\n            2.0 / width,  0.0,          0.0,\n            0.0,         -2.0 / height, 0.0,\n            -1.0,         1.0,          1.0\n        ];\n    },\n\n    translation: (tx: number, ty: number): number[] => {\n        return [\n            1, 0, 0,\n            0, 1, 0,\n            tx, ty, 1,\n        ];\n    },\n\n    rotation: (angleInRadians: number): number[] => {\n        const c = Math.cos(angleInRadians);\n        const s = Math.sin(angleInRadians);\n        return [\n            c, -s, 0,\n            s,  c, 0,\n            0,  0, 1,\n        ];\n    },\n\n    scaling: (sx: number, sy: number): number[] => {\n        return [\n            sx, 0, 0,\n            0, sy, 0,\n            0, 0,  1,\n        ];\n    },\n\n    multiply: (a: number[], b: number[]): number[] => {\n        const a00 = a[0 * 3 + 0];\n        const a01 = a[0 * 3 + 1];\n        const a02 = a[0 * 3 + 2];\n        const a10 = a[1 * 3 + 0];\n        const a11 = a[1 * 3 + 1];\n        const a12 = a[1 * 3 + 2];\n        const a20 = a[2 * 3 + 0];\n        const a21 = a[2 * 3 + 1];\n        const a22 = a[2 * 3 + 2];\n        const b00 = b[0 * 3 + 0];\n        const b01 = b[0 * 3 + 1];\n        const b02 = b[0 * 3 + 2];\n        const b10 = b[1 * 3 + 0];\n        const b11 = b[1 * 3 + 1];\n        const b12 = b[1 * 3 + 2];\n        const b20 = b[2 * 3 + 0];\n        const b21 = b[2 * 3 + 1];\n        const b22 = b[2 * 3 + 2];\n\n        return [\n          b00 * a00 + b01 * a10 + b02 * a20,\n          b00 * a01 + b01 * a11 + b02 * a21,\n          b00 * a02 + b01 * a12 + b02 * a22,\n          b10 * a00 + b11 * a10 + b12 * a20,\n          b10 * a01 + b11 * a11 + b12 * a21,\n          b10 * a02 + b11 * a12 + b12 * a22,\n          b20 * a00 + b21 * a10 + b22 * a20,\n          b20 * a01 + b21 * a11 + b22 * a21,\n          b20 * a02 + b21 * a12 + b22 * a22,\n        ];\n      }\n};\n"],"sourceRoot":""}